generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @unique @default(uuid())
  name                 String?
  password             String?
  email                String    @unique
  githubInstallationId String?
  projects             Project[]
  created_at           DateTime  @default(now())
  updated_at           DateTime  @default(now())
}

model Project {
  id            String      @unique @default(uuid())
  title         String
  sourceUrl     String
  excludePaths  String[]
  allowedOrigin String
  apiKeys       ApiKey[]
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  threads       Thread[]
  usage         Usage?      @relation("ProjectToUsage")
  repository    Repository?
  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now())
}

model ApiKey {
  id         String   @unique @default(uuid())
  secret     String
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String
  created_at DateTime @default(now())
}

model Thread {
  id            String         @unique @default(uuid())
  projectId     String
  project       Project        @relation(fields: [projectId], references: [id])
  conversations Conversation[]
  usageId       String?
  usage         Usage?         @relation(fields: [usageId], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @default(now())
}

model Conversation {
  id          String   @unique @default(uuid())
  threadId    String
  thread      Thread   @relation(fields: [threadId], references: [id])
  query       String
  llmResponce String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model Repository {
  id          String   @unique @default(uuid())
  githubId    Int      @unique
  name        String
  fullName    String
  description String?
  htmlUrl     String
  language    String?
  isPrivate   Boolean
  projectId   String   @unique
  project     Project  @relation(fields: [projectId], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model Usage {
  id              String   @unique @default(uuid())
  projectId       String   @unique
  project         Project  @relation("ProjectToUsage", fields: [projectId], references: [id])
  totalApiCalls   Int      @default(0)
  errorCalls      Int      @default(0)
  totalTokensUsed Int      @default(0)
  totalMessages   Int      @default(0)
  totalThreads    Int      @default(0)
  threads         Thread[]
}
