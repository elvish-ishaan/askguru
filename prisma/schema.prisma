
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id  String @default(uuid()) @unique
  name String?
  password  String?
  email String
  projects Project[]
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model Project {
  id  String @default(uuid()) @unique
  title String
  sourceUrl String
  excludePaths String[]
  allowedOrigin String
  apiKeys  ApiKey[]
  userId   String
  user     User @relation(fields: [userId], references: [id])
  threads  Thread[]
  usage    Usage?   @relation("ProjectToUsage")
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model ApiKey {
  id  String @default(uuid()) @unique
  secret String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  created_at  DateTime  @default(now())
}

model Thread {
  id  String @default(uuid()) @unique
  projectId String
  project Project @relation(fields: [projectId], references: [id])
  conversations Conversation[]
  usageId   String?
  usage     Usage? @relation(fields: [usageId], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model Conversation {
  id  String @default(uuid()) @unique
  threadId  String
  thread Thread @relation(fields: [threadId], references: [id])
  query  String
  llmResponce String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model  Usage {
  id  String @default(uuid()) @unique
  projectId String @unique
  project  Project  @relation("ProjectToUsage", fields: [projectId], references: [id])
  totalApiCalls Int @default(0)
  errorCalls    Int @default(0)
  totalTokensUsed Int @default(0)
  totalMessages  Int @default(0)
  totalThreads   Int @default(0)
  threads        Thread[]
}